<style lang="less">
@import "../res/layout.wxss";

.checkbox { width: 36rpx; height: 36rpx; -webkit-appearance: none; background-position: -4rpx -30rpx;}
.numbers-item-name-active .checkbox { background-position: -46rpx -30rpx;}

.numbers-item-name { display: flex; align-items: center; font-size: 28rpx; color: #252525;}
.numbers-item-name .icons { margin-right: 18rpx;}

.numbers-item .operas { width: 180rpx; height: 46rpx; box-sizing: border-box; border: 1rpx solid #e7e7e7; display: flex; border-radius: 6rpx;}
.numbers-item .operas .btn { width: 48rpx; height: 100%; display: flex; align-items: center; justify-content: center; background-color: transparent;}
.numbers-item .operas .nums { width: 80rpx; height: 100%; display: flex; align-items: center; justify-content: center; font-size: 28rpx; color: #252525;border-left: 1rpx solid #e7e7e7; border-right: 1rpx solid #e7e7e7;}
</style>
<template>
<div class="input-container">
   <div class="title" @tap="hidden = !hidden">
      <text>{{itemData.name}}</text>
      <div class="icons icon-add"></div>
   </div>
   <div class="frame" v-show="!hidden">
      <div class="li numbers-item" v-for="(item, index) in list">
         <div class="numbers-item-name" :class="{'numbers-item-name-active':item.checked}" @tap="toggle(index)">
            <div class="icons checkbox"></div>
            <text>{{item.name}}</text>
         </div>
         <div class="operas">
            <div class="btn" @tap="doReduce(index)"><i class="icons icon-reduce"></i></div>
            <div class="nums">{{item.nums}}</div>
            <div class="btn" @tap="doAdd(index)"><i class="icons icon-add-min"></i></div>
         </div>
      </div>
   </div>
   <div class="hr"></div>
</div>
</template>

<script>
import wepy from '@wepy/core'

wepy.component({
   props: {
      itemData: {
         type: Object,
         default: () => {}
      }
   },
   data: {
      hidden: true,
      checked: false,
      nums: 0,
      list: [],
      price: 0
   },
   watch: {
      itemData (val) {
         if (val.sub_button) {
            for (let p in val.sub_button) {
               this.list.push({
                  name: val.sub_button[p].name,
                  price: parseInt(val.sub_button[p].price),
                  nums: 0,
                  checked: false
               })
            }
         }
      }
   },
   attached() {
   },
   methods: {
      toggle (i) {
         this.list[i].checked = !this.list[i].checked
         this.setPrice()
      },
      doReduce (i) {
         if (this.list[i].nums === 0) return
         this.list[i].nums -= 1
         this.list[i].checked = this.list[i].nums !== 0
         this.setPrice()
      },
      doAdd (i) {
         this.list[i].nums += 1
         this.list[i].checked = true
         this.setPrice()
      },
      setPrice () {
         this.price = 0
         this.list.forEach(i => {
            const price = i.checked ? i.price * i.nums : 0
            this.price += price
         })
         this.$emit('count')
      }
   }
})
</script>
<config>
   {
      "usingComponents": {}
   }
</config>
