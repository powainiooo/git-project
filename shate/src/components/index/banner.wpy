<style>
.banner { margin: 15rpx; height: 410rpx; border-radius: 6rpx; overflow: hidden;}
.banner .link { width: 100%; height: 100%; display: block; position: relative;}
.banner .img { width: 100%; height: 100%; border-radius: 6rpx;}
.banner .name { width: 420rpx; height: 108rpx; background-color: rgba(0, 0, 0, 0.2); border: 1px dashed rgba(255, 255, 255, 0.4); font-size: 36rpx; color: #ffffff; display: flex; align-items: center; justify-content: center; position: absolute; top: 50%; left: 50%; margin: -54rpx 0 0 -210rpx;}
.banner .name::after { content: ''; width: 70rpx; height: 4rpx; border-radius: 2rpx; background-color: #ffffff; position: absolute; left: 175rpx; bottom: 20rpx;}
.banner-dot { display: flex; justify-content: center; margin-top: 10rpx;}
.banner-dot-item { width: 26rpx; height: 6rpx; border-radius: 3rpx; background:rgba(218,218,218,0.5); margin: 0 5rpx;}
.banner-dot .active { background:rgba(137,83,236,1);}
</style>
<template>
<div>
   <swiper autoplay class="banner" @change="bannerChange">
      <swiper-item v-for="item in listData">
         <div @click="toDetail(item.link)" class="link">
            <img :src="imgSrc + item.image" class="img"/>
            <div class="name" v-if="item.link !== '0'">{{item.name}}</div>
         </div>
      </swiper-item>
   </swiper>
   <ul class="banner-dot">
      <li class="banner-dot-item"
          v-for="(item, index) in listData"
          :class="{'active': currentIndex === index}"></li>
   </ul>
</div>
</template>

<script>
import wepy from '@wepy/core'
import store from '../../store'
import { mapState } from '@wepy/x'

wepy.component({
   store,
   props: {
      listData: []
   },
   computed: mapState([ 'imgSrc' ]),
   data: {
      currentIndex: 0
   },
   attached() {
   },
   methods: {
      bannerChange (e) {
         this.currentIndex = e.$wx.detail.current
      },
      toDetail (id) {
         if (id === '0' || id === '') {

         } else {
            wx.navigateTo({
               url: `/pages/building?id=${id}`
            })
         }
      }
   }
})
</script>
<config>
   {
   "usingComponents": {}
   }
</config>
