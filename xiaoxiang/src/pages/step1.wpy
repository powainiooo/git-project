<style lang="less">
@import "../res/layout.wxss";
   .build-type { width: 490rpx; display: flex; align-items: center;}
   .build-type .check-label { display: flex; align-items: center; margin-right: 30rpx; color: #252525; font-size: 28rpx;}
   .build-type .check-label .checkbox { margin-right: 10rpx;}
   .build-type .check-label .checkbox-check { background-position: -46rpx -30rpx;}
</style>
<template>
<div>
   <div class="input-container">
      <div class="title">户型面积</div>
      <div class="frame">
         <div class="li">
            <div class="name">户型</div>
            <!--<picker bindchange="selectChange" data-key="layoutIndex" value="{{layoutIndex}}" range="{{layoutList}}">-->
               <!--<div class="input {{layoutIndex === -1 ? 'input-placeholder' : ''}}">{{layoutIndex === -1 ? '选择户型' : layoutList[layoutIndex]}}</div>-->
            <!--</picker>-->
            <select class="input"
                    :class="{
                    'input-placeholder':layout === '',
                    'input-warn': layout === '' && isChecked
                    }"
                    range="{{layoutList}}"
                    v-model="layout"
                    @change="getPrice">
               <option>{{layout === '' ? '选择户型' : layoutList[layout]}}</option>
            </select>
         </div>
         <div class="li">
            <div class="name">面积</div>
            <input type="number" placeholder="输入面积" class="input" placeholder-class="input-placeholder" v-model="area" @blur="getPrice"/>
         </div>
      </div>
   </div>
   <div class="hr"></div>
   <div class="input-container">
      <div class="title">出发地</div>
      <div class="frame">
         <div class="li">
            <div class="name">类型</div>
            <div class="build-type">
               <div class="check-label" @tap="changeType('Out', '1')">
                  <div class="icons checkbox {{moveOut.type === '1' ? 'checkbox-check' : ''}}"></div>
                  <text>电梯</text>
               </div>
               <div class="check-label" @tap="changeType('Out', '2')">
                  <div class="icons checkbox {{moveOut.type === '2' ? 'checkbox-check' : ''}}"></div>
                  <text>楼梯</text>
               </div>
            </div>
         </div>
         <div class="li">
            <div class="name">搬出</div>
            <input placeholder="填写地址"
                   class="input"
                   :placeholder-class="isChecked ? 'input-warn' : 'input-placeholder'"
                   :disabled="true"
                   v-model="moveOut.name"
                   @tap="openMap('Out')"/>
         </div>
         <div class="li" v-if="moveOut.type === '2'">
            <div class="name">楼层</div>
            <select class="input" :class="{'input-placeholder':moveOut.index === ''}" range="{{buildingList}}" v-model="moveOut.index" @change="getPrice">
               <option>{{moveOut.index === '' ? '选择楼层' : buildingList[moveOut.index]}}</option>
            </select>
         </div>
      </div>
   </div>
   <div class="hr"></div>
   <div class="input-container">
      <div class="title">目的地</div>
      <div class="frame">
         <div class="li">
            <div class="name">类型</div>
            <div class="build-type">
               <div class="check-label" @tap="changeType('In', '1')">
                  <div class="icons checkbox {{moveIn.type === '1' ? 'checkbox-check' : ''}}"></div>
                  <text>电梯</text>
               </div>
               <div class="check-label" @tap="changeType('In', '2')">
                  <div class="icons checkbox {{moveIn.type === '2' ? 'checkbox-check' : ''}}"></div>
                  <text>楼梯</text>
               </div>
            </div>
         </div>
         <div class="li">
            <div class="name">搬入</div>
            <input placeholder="填写地址"
                   class="input"
                   :placeholder-class="isChecked ? 'input-warn' : 'input-placeholder'"
                   :disabled="true"
                   v-model="moveIn.name"
                   @tap="openMap('In')"/>
         </div>
         <div class="li" v-if="moveIn.type === '2'">
            <div class="name">楼层</div>
            <select class="input" :class="{'input-placeholder':moveIn.index === ''}" range="{{buildingList}}" v-model="moveIn.index" @change="getPrice">
               <option>{{moveIn.index === '' ? '选择楼层' : buildingList[moveIn.index]}}</option>
            </select>
         </div>
      </div>
   </div>
   <div class="hr"></div>
   <div class="price-line">基础价格预估　￥{{price}}</div>
   <div class="hr"></div>
   <button class="btn btn-step" @tap="doConfirm">下一步</button>
   <div class="hint">备注：{{remarks.remarks1}}</div>
   <div class="btn-phone" @tap="makePhone">电话下单：{{phone}}</div>
</div>
</template>

<script>
import wepy from '@wepy/core'
import store from '../store'
import {getHouseType, createOrderTwo, getBasicAmount} from '@/res/api.js'
import {promisify} from '@/res/util.js'
const chooseLocation = promisify(wx.chooseLocation)
wepy.page({
   store,
   data: {
      layoutList: ['一居室', '二居室', '三居室'],
      buildingList: [],
      layout: '',
      area: '',
      moveOut: {
         index: 0,
         type: '1',
         name: '',
         address: '',
         lat: '',
         lng: ''
      },
      moveIn: {
         index: 0,
         type: '1',
         name: '',
         address: '',
         lat: '',
         lng: ''
      },
      price: 0,
      isChecked: false
   },
   computed: {
      phone () {
         return store.state.phone
      },
      userOpenID () {
         return store.state.userOpenID
      },
      orderNums () {
         return store.state.orderNums
      },
      remarks () {
         return store.state.remarks
      }
   },
   onLoad() {
      for (let i = 0; i < 10; i++) {
         this.buildingList.push(i + 1)
      }
      getHouseType().then(res => {
         this.layoutList = res.data
      })
   },
   methods: {
      makePhone () {
         wx.makePhoneCall({
            phoneNumber: this.phone
         })
      },
      doConfirm () {
         this.isChecked = false
         if (this.layout === '') this.isChecked = true
         if (this.moveOut.name === '') this.isChecked = true
         if (this.moveIn.name === '') this.isChecked = true
         if (this.isChecked) return
         const params = this.getParams()
         params.order_num = this.orderNums
         params.out_address_name = this.moveOut.name
         params.s_address = this.moveOut.address
         params.in_address_name = this.moveIn.name
         params.f_address = this.moveIn.address
         createOrderTwo(params).then(res => {
            if (res.status === 0) {
               wx.redirectTo({
                  url: '/pages/step2'
               })
            }
         })
      },
      getPrice () {
         const params = this.getParams()
         getBasicAmount(params).then(res => {
            if (res.status === 0) {
               this.price = res.result.total
               store.commit('setBasePrice', res.result.total)
            }
         })
      },
      getParams () {
         let sFloor = 0
         let fFloor = 0
         if (this.moveOut.type !== '1') {
            sFloor = this.moveOut.index === '' ? 0 : this.buildingList[this.moveOut.index]
         }
         if (this.moveIn.type !== '1') {
            fFloor = this.moveIn.index === '' ? 0 : this.buildingList[this.moveIn.index]
         }
         return {
            house_type: this.layout === '' ? '' : this.layoutList[this.layout],
            area: this.area,
            out_type: this.moveOut.type,
            in_type: this.moveIn.type,
            start_lon: this.moveOut.lng,
            start_lat: this.moveOut.lat,
            finish_lon: this.moveIn.lng,
            finish_lat: this.moveIn.lat,
            s_floor: sFloor,
            f_floor: fFloor
         }
      },
      changeType (key, data) {
         this[`move${key}`].type = data
         this.getPrice()
      },
      async openMap (key) {
         const res = await chooseLocation()
         this[`move${key}`].name = res.name
         this[`move${key}`].address = res.address
         this[`move${key}`].lat = res.latitude
         this[`move${key}`].lng = res.longitude
         this.getPrice()
      },
      onShareAppMessage () {
         return {
            title: '小象搬家',
            path: 'pages/login',
            imageUrl: 'https://www.xx-bj.com/static/xx-bj.png'
         }
      }
   }
})
</script>
<config>
   {
      "usingComponents": {},
      "navigationBarBackgroundColor": "#3bab70",
      "navigationBarTextStyle": "white"
   }
</config>
