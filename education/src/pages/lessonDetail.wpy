<style>
   .header { z-index: 10;}
   .lesson-item-detail { width: 100%; border-radius: 0; height: 200rpx; margin: 0;}
   .lesson-item-detail .name { left: auto; right: 30rpx; bottom: auto; top: 30rpx;}
   .progress { height: 170rpx; background-color: #ffffff; overflow: hidden; margin-bottom: 70rpx;}
   .progress .nums { text-align: right; padding-right: 50rpx; font-size: 25rpx; color: #b9babb; margin-top: 40rpx; margin-bottom: 10rpx;}
   .progress .nums .val { font-size: 40rpx; color: #221715; font-weight: bold; font-family: Arial;}
   .progress .line-bg { margin: 0 50rpx; height: 8rpx; background-color: #edecea; border-radius: 4rpx;}
   .progress .line-bg .line { width: 50%; height: 100%; background-color: #e9ba90; border-radius: 4rpx;}
   .list-frame { margin-bottom: 80rpx;}
   .list-frame .year { font-size: 40rpx; color: #cacaca; margin-bottom: 24rpx; margin-left: 50rpx;}
   .list-frame .list { width: 696rpx; display: flex; flex-wrap: wrap; margin: 0 auto;}
   .list-frame .list .list-item { width: 200rpx; height: 200rpx; border-radius: 30rpx; box-shadow: 0 25rpx 20rpx rgba(0, 0, 0, 0.1); background-color: #ffffff; overflow: hidden; margin: 0 16rpx 32rpx 16rpx;}
   .list-frame .list .list-item .date { height: 70rpx; display: flex; justify-content: center; align-items: center;  font-size: 40rpx; color: #ffffff; background-color: #e5ad84; letter-spacing: 4rpx;}
   .list-frame .list .list-item .name { height: 130rpx; display: flex; justify-content: center; align-items: center; font-size: 25rpx; color: #878887; text-align: center;}
</style>
<wxs module="util" lang="babel">
   const format = (date, type) => {
      if (date === undefined) return ''
      if (type === 'year') {
         return date.substring(0, 4)
      } else if (type === 'month') {
         return date.substring(5, 12)
      }
   }
   module.exports.format = format
</wxs>
<template>
   <div>
      <div class="container {{showMenu ? 'blur' : ''}}" style="padding-bottom: 0;">
         <zHeader></zHeader>
         <div class="lesson-item lesson-item-detail">
            <img :src="itemData.image" class="img" mode="widthFix"/>
            <div class="name text-shadow">{{itemData.name}}</div>
            <div class="nums">{{itemData.num}}<span class="unit">节</span></div>
         </div>
         <div class="progress shadow1">
            <div class="nums">
               已使用<span class="val"> {{itemData.use_num}} </span>节
            </div>
            <div class="line-bg">
               <div class="line" :style="{width: percent + '%'}"></div>
            </div>
         </div>
         <div class="hint" v-if="itemData.reviews.length === 0">
            <img src="../res/img/tips3.png" style="width: 70rpx; height: 70rpx; display: block; margin-bottom: 20rpx;"/>
            课程尚未开始，暂无课程评论。若已开始上课，尚未有课程评论，请耐心等候教师发布课程评论。
         </div>
         <div class="list-frame" v-for="(item, key) in reviewsData">
            <div class="year">{{key}}</div>
            <ul class="list">
               <li class="list-item" v-for="i in item"
                   :key="i.id"
                   @click="intoComment(i.id)"
                   hover-class="hscale"
                   hover-stay-time="10">
                  <div class="date text-shadow">{{i.date}}</div>
                  <div class="name">{{i.title}}</div>
               </li>
            </ul>
         </div>
      </div>
   </div>
</template>

<script>
   import wepy from '@wepy/core'
   import store from '../store'
   import { mapState } from '@wepy/x'
   import {getCourseDetailByStudent} from '@/res/api.js'
   // https://github.com/wx-plugin/image-cropper
   wepy.page({
      store,
      data: {
         itemData: {},
         percent: 0,
         reviewsData: {}
      },
      computed: mapState(['showMenu']),
      onLoad(query) {
         const id = query.id || 15
         this.getData(id)
      },
      methods: {
         getData (id) {
            getCourseDetailByStudent({id}).then(res => {
               this.itemData = res.data
               this.percent = parseInt(this.itemData.use_num / this.itemData.num * 100)
               let obj = {}
               for (let i of res.data.reviews) {
                  const date = i.class_date.split('/')
                  if (obj[date[0]] === undefined) {
                     obj[date[0]] = []
                  }
                  obj[date[0]].push({
                     id: i.id,
                     title: i.title,
                     date: `${date[1]}/${date[2]}`
                  })
               }
               this.reviewsData = obj
            })
         },
         intoComment (id) {
            store.commit('setLeassonData', {
               name: this.itemData.name,
               image: this.itemData.image
            })
            wx.navigateTo({
               url: `/pages/comment?id=${id}`
            })
         }
      }
   })
</script>
<config>
   {
      "usingComponents": {
         "menu": "~@/components/menu"
      }
   }
</config>
